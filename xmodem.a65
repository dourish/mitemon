

;; simple xmodem implementation (receive only)
;;


XBLOCKNO = $0030
XBLOCKINV =  $0031
XBLOCKCOUNT = $0032
XCHKSUM = $0033
;;XDEST = $0034 ; and $0035
XDEST = $0400

;; for the moment, let's presume that the data is at
;; XBUFFER

xmodemrecv
  stz XBLOCKCOUNT
  ldy #$0

nextblock
  ;; anything?

;; check header data and block number
processbuffer
  jsr geta
  cmp #$04          ; end-of-transmission?
  beq endoftransmission
  cmp #$01          ; start-of-header?
  beq processblock
  jmp error

processblock
  ;; get block number and inverse block number
  jsr geta
  sta XBLOCKNO
  jsr geta
  sta XBLOCKINV
  sec
  lda #255
  sbc XBLOCKNO
  cmp XBLOCKINV     ; does block number match inverse block number?
  beq checkblockcount
  jmp error

checkblockcount
  inc XBLOCKCOUNT
  cmp XBLOCKNO      ; does it match what we were expecting?
  beq processdata
  jmp error

processdata
nextbyte
  stz XCHKSUM
  jsr geta
  sta XDEST,x
  clc
  adc XCHKSUM
  inx
  cpx #$80
  bne nextbyte
endofblock
  jsr geta
  cmp XCHKSUM
  beq checksumok
  jmp error
checksumok
  bra nextblock

;; what do i do at this point? just say "OK"?
endoftransmission
  jsr crlf
  jmp endxmodem

error
  ;; say something bad

endxmodem
  plx               ; restore operand stack pointer in x
  rts

;; when this runs for real, geta will get a character from the IO
;; but for now, it's going to read out of a predefined buffer
geta
  lda XBUFFER,y
  iny
  rts


;; test data
XBUFFER
.byte $01, $01, $FE
.byte $54,  $68,  $65,  $20,  $63,  $68,  $69,  $65,  $66,  $20
.byte $64,  $65,  $66,  $65,  $63,  $74,  $20,  $6f,  $66,  $20,  $48,  $65,  $6e,  $72,  $79,  $20
.byte $4b,  $69,  $6e,  $67,  $0a,  $77,  $61,  $73,  $20,  $63,  $68,  $65,  $77,  $69,  $6e,  $67
.byte $20,  $6c,  $69,  $74,  $74,  $6c,  $65,  $20,  $62,  $69,  $74,  $73,  $20,  $6f,  $66,  $20
.byte $73,  $74,  $72,  $69,  $6e,  $67,  $2e,  $0a,  $41,  $74,  $20,  $6c,  $61,  $73,  $74,  $20
.byte $68,  $65,  $20,  $73,  $77,  $61,  $6c,  $6c,  $6f,  $77,  $65,  $64,  $20,  $73,  $6f,  $6d
.byte $65,  $2c,  $20,  $77,  $68,  $69,  $63,  $68,  $20,  $74,  $69,  $65,  $64,  $0a,  $69,  $74
.byte $73,  $65,  $6c,  $66,  $20,  $69,  $6e,  $20,  $6c,  $69,  $74,  $74,  $6c,  $65,  $20,  $6b
.byte $6e,  $6f,  $74,  $73,  $20,  $0a
.byte $5d

.byte $01, $02, $FD
.byte $69,  $6e,  $73,  $69,  $64,  $65,  $2e,  $0a,  $50,  $68,  $79,  $73,  $69,  $63,  $69
.byte $61,  $6e,  $73,  $20,  $6f,  $66,  $20,  $74,  $68,  $65,  $20,  $75,  $74,  $6d,  $6f,  $73
.byte $74,  $20,  $66,  $61,  $6d,  $65,  $0a,  $77,  $65,  $72,  $65,  $20,  $63,  $61,  $6c,  $6c
.byte $65,  $64,  $20,  $61,  $74,  $20,  $6f,  $6e,  $63,  $65,  $2c,  $20,  $62,  $75,  $74,  $20
.byte $77,  $68,  $65,  $6e,  $20,  $74,  $68,  $65,  $79,  $20,  $63,  $61,  $6d,  $65,  $2c,  $0a
.byte $74,  $68,  $65,  $79,  $20,  $61,  $6e,  $73,  $77,  $65,  $72,  $65,  $64,  $2c,  $20,  $61
.byte $73,  $20,  $74,  $68,  $65,  $79,  $20,  $74,  $6f,  $6f,  $6b,  $20,  $74,  $68,  $65,  $69
.byte $72,  $20,  $66,  $65,  $65,  $73,  $2c,  $0a,  $22,  $54,  $68,  $65,  $72,  $65,  $20,  $69
.byte $0a
.byte $c1,

.byte $01, $03, $FC
.byte $73,  $20,  $6e,  $6f
.byte $20,  $63,  $75,  $72,  $65,  $20,  $66,  $6f,  $72,  $20,  $74,  $68,  $69,  $73,  $20,  $64
.byte $69,  $73,  $65,  $61,  $73,  $65,  $2e,  $0a,  $48,  $65,  $6e,  $72,  $79,  $20,  $77,  $69
.byte $6c,  $6c,  $20,  $76,  $65,  $72,  $79,  $20,  $73,  $6f,  $6f,  $6e,  $20,  $62,  $65,  $20
.byte $64,  $65,  $61,  $64,  $2e,  $22,  $0a,  $48,  $69,  $73,  $20,  $70,  $61,  $72,  $65,  $6e
.byte $74,  $73,  $20,  $73,  $74,  $6f,  $6f,  $64,  $20,  $61,  $62,  $6f,  $75,  $74,  $20,  $68
.byte $69,  $73,  $20,  $62,  $65,  $64,  $0a,  $6c,  $61,  $6d,  $65,  $6e,  $74,  $69,  $6e,  $67
.byte $20,  $68,  $69,  $73,  $20,  $75,  $6e,  $74,  $69,  $6d,  $65,  $6c,  $79,  $20,  $64,  $65
.byte $61,  $74,  $68,  $0a,  $77,  $68,  $65,  $6e,  $20,  $48,  $65,  $0a
.byte $37

.byte $01
.byte $04
.byte $FB

.byte $6e,  $72,  $79,  $2c,  $20,  $77,  $69,  $74,  $68
.byte $20,  $68,  $69,  $73,  $20,  $6c,  $61,  $74,  $65,  $73,  $74,  $20,  $62,  $72,  $65,  $61
.byte $74,  $68,  $2c,  $0a,  $63,  $72,  $69,  $65,  $64,  $2c,  $20,  $22,  $4f,  $68,  $20,  $6d
.byte $79,  $20,  $66,  $72,  $69,  $65,  $6e,  $64,  $73,  $2c,  $20,  $62,  $65,  $20,  $77,  $61
.byte $72,  $6e,  $65,  $64,  $20,  $62,  $79,  $20,  $6d,  $65,  $0a,  $74,  $68,  $61,  $74,  $20
.byte $62,  $72,  $65,  $61,  $6b,  $66,  $61,  $73,  $74,  $2c,  $20,  $64,  $69,  $6e,  $6e,  $65
.byte $72,  $2c,  $20,  $6c,  $75,  $6e,  $63,  $68,  $2c,  $20,  $61,  $6e,  $64,  $20,  $74,  $65
.byte $61,  $0a,  $69,  $73,  $20,  $61,  $6c,  $6c,  $20,  $74,  $68,  $65,  $20,  $68,  $75,  $6d
.byte $61,  $6e,  $20,  $66,  $72,  $61,  $0a
.byte $f1,

.byte $01, $05, $FA,
.byte $69,  $6e,  $76,  $20,  $62,  $6c,  $6f,  $63, $6b,  $0a
.byte $6d,  $65,  $20,  $72,  $65,  $71,  $75,  $69,  $72,  $65,  $73,  $21,  $22,  $0a
.byte $57,  $69,  $74,  $68,  $20,  $74,  $68,  $61,  $74,  $2c,  $20,  $74,  $68,  $65,  $20,  $77
.byte $72,  $65,  $74,  $63,  $68,  $65,  $64,  $20,  $63,  $68,  $69,  $6c,  $64,  $20,  $65,  $78
.byte $70,  $69,  $72,  $65,  $73,  $2e,  $0a,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58
.byte $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58
.byte $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58
.byte $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58
.byte $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58,  $58
.byte $58,  $0a
.byte $15,

.byte $04
